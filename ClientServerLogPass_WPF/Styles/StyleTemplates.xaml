<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="Color.Dark.Grey" Color="#2c2e32"/>
    <SolidColorBrush x:Key="Color.Light.Grey" Color="#404247"/>
    <SolidColorBrush x:Key="Color.Border" Color="#373854"/>
    <SolidColorBrush x:Key="Color.Red" Color="#d5414f"/>
    <SolidColorBrush x:Key="Color.Gray" Color="#6f767e"/>
    <SolidColorBrush x:Key="Color.LightGreen" Color="#12aa92"/>
    <FontFamily x:Key="jura">pack://application:,,,/Fonts/#jura</FontFamily>

    <Storyboard x:Key="GreenAnimation">
        <Storyboard TargetProperty="Background.Color">
            <ColorAnimation To="#12aa92" Duration="0:0:0:1" SpeedRatio="4"/>
        </Storyboard>
    </Storyboard>
    <Storyboard x:Key="GreyAnimation">
        <Storyboard TargetProperty="Background.Color">
            <ColorAnimation To="#404247" Duration="0:0:0:1" SpeedRatio="4"/>
        </Storyboard>
    </Storyboard>

    <Style x:Key="MainGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource Color.Dark.Grey}"/>
    </Style>
    <Style x:Key="MainBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource Color.LightGreen}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <Style x:Key="WindowName" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource jura}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Gray}"/>
        <Setter Property="Padding" Value="20 0 0 0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="minimiseButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Color.Dark.Grey}"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Light.Grey}"/>
        <Setter Property="Content" Value="□"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Padding" Value="0 -11 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Color.LightGreen}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="closeButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Color.Dark.Grey}"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Light.Grey}"/>
        <Setter Property="Content" Value="X"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="0 0 0 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Color.Red}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OperationButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Color.Light.Grey}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="FontSize" Value="26"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource GreenAnimation}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource GreyAnimation}"/>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="20" ShadowDepth="0" Opacity="0.8" Color="#12aa92"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LoginTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource Color.Light.Grey}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Color.LightGreen}"/>
        <Setter Property="CaretBrush" Value="{StaticResource Color.LightGreen}"/>
        <Setter Property="Margin" Value="60 0 60 0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource jura}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="PasswordBox" TargetType="PasswordBox">
        <Setter Property="Background" Value="{StaticResource Color.Light.Grey}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Color.LightGreen}"/>
        <Setter Property="CaretBrush" Value="{StaticResource Color.LightGreen}"/>
        <Setter Property="Margin" Value="60 0 60 0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource jura}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="PasswordChar" Value="✘"/>
        <Setter Property="MaxLength" Value="12"/>
    </Style>
    
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Color.LightGreen}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{StaticResource jura}"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border x:Name="on" Background="LightGray" CornerRadius="2,0,0,4" Margin="10,0,0,0" Padding="10 0">
                            <TextBlock x:Name="onText" Text="⇇" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Border x:Name="off"  Background="LightGray" CornerRadius="0,2,4,0" Padding="10 0 ">
                            <TextBlock x:Name="offText" Text="⇉" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="on" Property="Background" Value="#12aa92"/>
                            <Setter TargetName="onText" Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="off" Property="Background" Value="#d5414f"/>
                            <Setter TargetName="offText" Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>